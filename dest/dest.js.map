{"version":3,"sources":["webpack:///webpack/bootstrap f75f869bf8980c46f801","webpack:///./default.js","webpack:///./imagecompute/main.js"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,uBAAe;AACf;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;;;;;;;;;;;;;ACtCA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;;;;;ACvDA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAI;AACJ;AACA;AACA;AACA;AACA;AACA,qBAAoB,2BAA2B;AAC/C;AACA,sBAAqB,uBAAuB;AAC5C;AACA;AACA;AACA;AACA;AACA,IAAG;AACH,YAAW;AACX;AACA;AACA,mBAAkB,2BAA2B;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,K;AACA;AACA,IAAG;AACH,eAAc;AACd;AACA,SAAQ,eAAe;AACvB;AACA;AACA;AACA,kBAAiB,SAAS;AAC1B;AACA;AACA,mBAAkB,MAAM;AACxB;AACA;AACA;AACA;AACA,IAAG;AACH,sBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL,KAAI;AACJ,IAAG;AACH;AACA;AACA;AACA,kBAAiB,wBAAwB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL,oBAAmB;AACnB;AACA;AACA;AACA;AACA,OAAM;AACN;AACA;AACA;AACA;AACA;AACA,kBAAiB,wBAAwB;AACzC;AACA;AACA;AACA;AACA;AACA,IAAG;AACH,cAAa;AACb,kBAAiB,6BAA6B;AAC9C;AACA;AACA,IAAG;AACH,+BAA8B;AAC9B,kBAAiB,6BAA6B;AAC9C;AACA;AACA;AACA,IAAG;AACH,uBAAsB;AACtB,kBAAiB,6BAA6B;AAC9C;AACA;AACA;AACA;AACA,IAAG;AACH,mBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB,6BAA6B;AAC9C;AACA;AACA;AACA,IAAG;AACH,eAAc;;AAEd;AACA;;AAEA,uB","file":"dest.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap f75f869bf8980c46f801","\t\tlet Compute =  require('./imagecompute/main.js');\n\n\t\tinit('./1.jpg');\n\n\t\tfunction init(pic) {\n\t\t\tlet State = {\n\t\t\t\tcanvasEle: Object,\n\t\t\t\tctx: Object,\n\t\t\t\timageData: Object\n\t\t\t};\n\t\t\tlet gen;\n\n\t\t\tfunction load(img, el) {\n\t\t\t\tlet {\n\t\t\t\t\theight,\n\t\t\t\t\twidth\n\t\t\t\t} = img;\n\t\t\t\tlet canvasEle = document.createElement(`CANVAS`);\n\t\t\t\tlet ctx = canvasEle.getContext('2d');\n\n\t\t\t\tcanvasEle.height = height;\n\t\t\t\tcanvasEle.width = width;\n\t\t\t\tctx.drawImage(img, 0, 0);\n\t\t\t\tel.appendChild(canvasEle);\n\n\t\t\t\tlet imageData = ctx.getImageData(0, 0, width, height);\n\t\t\t\tState = {\n\t\t\t\t\tcanvasEle,\n\t\t\t\t\tctx,\n\t\t\t\t\timageData\n\t\t\t\t};\n\t\t\t\tgen.next();\n\t\t\t}\n\n\t\t\tfunction* initCanvas(pic,\n\t\t\t\tel = document.getElementsByTagName('BODY')[0]) {\n\t\t\t\tlet img = new Image();\n\t\t\t\timg.src = pic;\n\t\t\t\tyield img.onload = function() {\n\t\t\t\t\tload(img, el)\n\t\t\t\t};\n\t\t\t\t//全局的状态 canvas元素，绘图上下文，图像数据\n\t\t\t\t//进行图片的处理\n\t\t\t\tlet imagedata = Compute.deal(State.imageData);\n\t\t\t\t//clear\n\t\t\t\tState.ctx.clearRect(0,0,State.imageData.width,State.imageData.height);\n\t\t\t\t//调整大小\n\t\t\t\tState.canvasEle.height = imagedata.height;\n\t\t\t\tState.canvasEle.width = imagedata.width;\n\t\t\t\tState.ctx.putImageData(imagedata,0,0,0,0,imagedata.width,imagedata.height);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tgen = initCanvas(pic);\n\t\t\tgen.next();\n\t\t}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./default.js\n// module id = 1\n// module chunks = 0","\tmodule.exports = {\n\t\timagedata:Array,//原始图像数组\n\t\tgrayimage:Array,//灰度之后的图像数组,失去rgba信息,不能直接输出为图像\n\t\ttwoDime:Array,//二维的图像像素数组，不能直接输出为图像\n\t\tdeal(imagedata) {\n\t\t\tthis.imagedata = imagedata;\n\n\t\t\t//给imagedata 加上set get 方法\n\t\t\t//TODO\n\n\t\t\tlet that = this;\n\t\t\tlet pre = ['toGray'];\n\t\t\tpre.forEach(function(e){\n\t\t\t\tthat[e]();\n\t\t\t});\n\t\t\t// this.toRawData(this.twoDime);\n\t\t\t// this.powerChange(1);\n\t\t\t// this.log(0.9);\n\t\t\tthis.bitmap(6);\n\t\t\t// let del = this.operImageData(0,this.imagedata,this.imagedata.width,this.imagedata.height/2);\n\t\t\t// for(let i = 0;i< this.imagedata.height/2;i++){\n\t\t\t\t// del.next(i);\n\t\t\t\t// for(let j = 0;j<this.imagedata.width;j++){\n\t\t\t\t\t// del.next(j+i*this.imagedata.width);\n\t\t\t\t// }\n\t\t\t// }\n\t\t\t// this.imagedata = del.next(true).value;\n\t\t\treturn this.imagedata;\n\t\t},\n\t\ttoGray(){//灰度\n\t\t\tlet imagedata = this.imagedata;\n\t\t\tthis.grayimage = [];\n\t\t\tfor (let i = 0; i < imagedata.data.length;) {\n\t\t\t\tlet gray = (imagedata.data[i] * 30 + imagedata.data[i + 1] * 59 + imagedata.data[i + 2] * 11) / 100;\n\t\t\t\tgray = parseInt(gray);\n\t\t\t\timagedata.data[i] = gray;\n\t\t\t\timagedata.data[i + 1] = gray;\n\t\t\t\timagedata.data[i + 2] = gray;\n\t\t\t\tthis.grayimage.push(gray);\n\t\t\t\ti = i + 4;\n\t\t\t}\t\n\t\t\treturn imagedata;\n\t\t},\n\t\ttoTwoDime(){//一维图像数组转二维\n\t\t\tthis.twoDime = [];\n\t\t\tlet {height , width} = this.imagedata;\n\t\t\tlet row = Math.pow(this.grayimage.length/(height/width),0.5);\n\t\t\tlet column = this.grayimage.length/row;\n\t\t\tlet count = 0;\n\t\t\tfor(let i = 0;i<column;i++){\n\t\t\t\tlet item = [];\n\t\t\t\tthis.twoDime.push(item);\n\t\t\t\tfor(let j = 0;j<row;j++){\n\t\t\t\t\titem.push(this.grayimage[count]);\n\t\t\t\t\tcount+=1;\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\ttoRawData(twoDime){//二维图像数组信息同步回原始图像数组\n\t\t\tlet that = this;\n\t\t\tlet count=0;\n\t\t\tthis.imagedata.data\n\t\t\ttwoDime.forEach(function(e,index){\n\t\t\t\te.forEach(function(ee,indexs){\n\t\t\t\t\tthat.imagedata.data[count*4] = ee;\n\t\t\t\t\tthat.imagedata.data[count*4+1] = ee;\n\t\t\t\t\tthat.imagedata.data[count*4+2] = ee;\n\t\t\t\t\tcount+=1;\n\t\t\t\t});\n\t\t\t})\n\t\t},\n\t\t*operImageData (oper,imagedata,width,height){\n\t\t\tlet copyarry = [];\n\t\t\tlet flag = false;\n\t\t\tfor(let i = 0;i<imagedata.data.length;i++){\n\t\t\t\tcopyarry.push(imagedata.data[i]);\n\t\t\t}\n\t\t\twhile(1){\n\t\t\t\tflag = yield flag;\n\t\t\t\tif(flag === true){\n\t\t\t\t\tbreak;\n\t\t\t\t}else{\n\t\t\t\t\tif(oper == 0){ //只能4个4个的删\n\t\t\t\t\t\tdelete copyarry[flag];\n\t\t\t\t\t\tdelete copyarry[flag+1]\n\t\t\t\t\t\tdelete copyarry[flag+2]\n\t\t\t\t\t\tdelete copyarry[flag+3]\n\t\t\t\t\t}else{\n\t\t\t\t\t\t//添加像素\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tlet copyimage = new ImageData(width,height);\n\t\t\tfor(let i = 0;i<copyimage.data.length;i++){\n\t\t\t\tif(copyarry[i]){\n\t\t\t\t\tcopyimage.data[i] = copyarry[i];\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn copyimage;\n\t\t},\n\t\treversal(){//图像反转\n\t\t\tfor(let i = 0;i<this.imagedata.data.length;i++){\n\t\t\t\tthis.imagedata.data[i] =  255 - this.imagedata.data[i];\n\t\t\t}\n\t\t},\n\t\tpowerChange(param,weight=1){//幂次变换\n\t\t\tfor(let i = 0;i<this.imagedata.data.length;i++){\n\t\t\t\tlet newdata = (weight*Math.pow(this.imagedata.data[i]/255,param)*this.imagedata.data[i]);\n\t\t\t\tthis.imagedata.data[i] = newdata<=255?newdata:255;\n\t\t\t}\n\t\t},\n\t\tlog(param,weight=1){//对数变换 parm 是 [0,1]\n\t\t\tfor(let i = 0;i<this.imagedata.data.length;i++){\n\t\t\t\tlet newdata = (weight*Math.log(this.imagedata.data[i]*param+1)/\n\t\t\t\t\tMath.log(this.imagedata.data[i]+1))*this.imagedata.data[i];\n\t\t\t\tthis.imagedata.data[i] = newdata;\n\t\t\t}\n\t\t},\n\t\tbitmap(index=0){//比特分层,输出哪个比特面\n\t\t\tif(index > 7){\n\t\t\t\tthrow(\"invaild\");\n\t\t\t}\n\t\t\tindex = 7 - index;\n\t\t\tlet base = parseInt(10000000,2);\n\t\t\tlet bit = base >> index;\n\t\t\tfor(let i = 0;i<this.imagedata.data.length;i++){\n\t\t\t\tlet newdata = this.imagedata.data[i] & bit;\n\t\t\t\tthis.imagedata.data[i] = newdata;\n\t\t\t}\n\t\t},\n\t\thistogram(){//直方图均衡\n\n\t\t}\n}\n\n// 6212261001026960531\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./imagecompute/main.js\n// module id = 2\n// module chunks = 0"],"sourceRoot":""}